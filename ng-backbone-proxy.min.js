!function(a,b,c){"use strict";angular.module("ngBackbone",[]).factory("Backbone",["$http",function(a){var b,c,d,e=_.isUndefined;return b={create:"POST",update:"PUT",patch:"PATCH","delete":"DELETE",read:"GET"},c=function(a,c,f){e(f)&&(f={});var g=f.method||b[a],h={method:g};f.url||(h.url=_.result(c,"url")),e(f.data)&&c&&("POST"===g||"PUT"===g||"PATCH"===g)&&(h.data=JSON.stringify(f.attrs||c.toJSON(f))),"GET"!==g||e(f.data)||(h.params=f.data);var i=d(_.extend(h,f)).success(function(a,b,c,d){f.xhr={status:b,headers:c,config:d},!e(f.success)&&_.isFunction(f.success)&&f.success(a)}).error(function(a,b,c,d){f.xhr={status:b,headers:c,config:d},!e(f.error)&&_.isFunction(f.error)&&f.error(a)});return c.trigger("request",c,i,_.extend(h,f)),i},d=function(){return a.apply(a,arguments)},_.extend(Backbone,{sync:c,ajax:d})}]).factory("NgBackboneModel",["$rootScope","Backbone",function(a,b){var c;return c=function(a){var b=this;Object.defineProperty(this.$attr,a,{enumerable:!0,configurable:!0,get:function(){return b.$proxy[a]},set:function(c){b.set(a,c)}})},b.Model.extend({constructor:function(){var a=this,c=b.Model.apply(this,arguments);return this.$status={deleting:!1,loading:!1,saving:!1,syncing:!1},this.on("request",function(a,b,c){this.$setStatus({deleting:"DELETE"===c.method,loading:"GET"===c.method,saving:"POST"===c.method||"PUT"===c.method,syncing:!0})}),this.on("sync error",this.$resetStatus),this.$attr={},this.$proxy={},a.$setBinding(this.toJSON()),this.on("change",function(b,c){var d=a.changedAttributes();d&&a.$setBinding(d,c)},this),c},$resetStatus:function(){return this.$setStatus({deleting:!1,loading:!1,saving:!1,syncing:!1})},$setBinding:function(a,b,d){var e,f,g,h=this;return _.isUndefined(a)?this:(_.isObject(a)?(e=a,d=b):(e={})[a]=b,d=d||{},f=d.unset,g=d.silent,_.each(e,function(a,b){f&&!_.isUndefined(h.$proxy)?delete h.$proxy[b]:f||_.isUndefined(h.$proxy[b])&&c.call(h,b)}),g||(h.$proxy=_.clone(h.attributes)),this)},$setStatus:function(a,b,c){var d,e;if(_.isUndefined(a))return this;_.isObject(a)?(e=a,c=b):(e={})[a]=b,c=c||{};for(d in this.$status)e.hasOwnProperty(d)&&_.isBoolean(e[d])&&(this.$status[d]=e[d])},$removeBinding:function(a,b){return this.$setBinding(a,void 0,_.extend({},b,{unset:!0}))}})}]).factory("NgBackboneCollection",["Backbone","NgBackboneModel",function(a,b){return a.Collection.extend({model:b,constructor:function(){var b=this,c=a.Collection.apply(this,arguments);return this.$status={deleting:!1,loading:!1,saving:!1,syncing:!1},this.on("request",function(a,b,c){this.$setStatus({deleting:"DELETE"===c.method,loading:"GET"===c.method,saving:"POST"===c.method||"PUT"===c.method,syncing:!0})}),this.on("sync error",this.$resetStatus),this.on("destroy",this.$resetStatus),Object.defineProperty(this,"$models",{enumerable:!0,get:function(){return b.$proxy}}),b.$proxy=_.clone(b.models),this.on("change destroy remove add sort reset",function(){b.$proxy=_.clone(b.models)}),c},$setStatus:function(a,b,c){var d,e;if(_.isUndefined(a))return this;_.isObject(a)?(e=a,c=b):(e={})[a]=b,c=c||{};for(d in this.$status)e.hasOwnProperty(d)&&_.isBoolean(e[d])&&(this.$status[d]=e[d])},$resetStatus:function(){return this.$setStatus({deleting:!1,loading:!1,saving:!1,syncing:!1})}})}])}(window,document);
//# sourceMappingURL=ng-backbone-proxy.map